
openapi: 3.0.3
info:
  title: Go REST 
  description: GraphQL and REST API for Testing and Prototyping
  version: 1.0.1
servers:
  - url: https://gorest.co.in/public/v2
tags:
  - name: users
    description: Operations about Users
  - name: posts
    description: Operations about Posts
  - name: comments
    description: Operations about Comments
  - name: todos
    description: Operations about To-Dos
paths:
  /users:
    get:
      tags:
        - users
      summary: Get list of users
      description: Get list of users
      responses:
        '200':
          description: A JSON array of Users
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/User'
  /comments:
    get:
      tags:
        - comments
      summary: Get list of comments
      description: Get list of comments
      responses:
        '200':
          description: A JSON array of comments
          content:
            application/json:
              schema:
                type: array
                items:
                $ref: '#/components/schemas/Comments'

  /users/{user_id}/posts:
    get:
      tags:
        - posts
      summary: Get list of users posts
      description: Get list of users posts
      parameters:
        - name: user_id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A JSON array of Users Posts
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/UserPosts'       
  /users/{id}:
    get:
      tags:
        - users
      summary: Get a user by ID
      description: Get a user by ID
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A JSON object of a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    User:
      type: object          
      properties:
        id:
          type: string
          example: 5896
        name:
          type: string
          example: James
        email:
          type: string
          example: james@test.com
        gender:
          type: string
          example: M
        status:
          type: string
          example: active
    Comments:
      type: object
      properties:
        id:
          type: string
          example: 1
        post_id:
          type: string
          example: 1
        name:
          type: string
          example: John Doe
        email:
          type: string
          example: john.doe@example.com
        body:
          type: string
          example: This is a comment.
    UserPosts:
      type: object          
      properties:
        id:
          type: integer
          example: 18403
        user_id:
          type: integer
          example: 367157
        title:
          type: string
          example: Post Title Example.
        body:
          type: string
          example: Body content example.

    User:
      type: object          
      properties:
        id:
          type: integer
          example: 693
        name:
          type: string
          example: Chanda Devar
        email:
          type: string
          example: devar_chanda@runolfsdottir.io
        gender:
          type: string
          example: female
        status:
          type: string
          example: inactive
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT


security:
  - bearerAuth: [] 